


# 基本操作，即只有常数项，认为其时间复杂度为O(1)
# 顺序结构，时间复杂度按加法进行计算
# 循环结构，时间复杂度按乘法进行计算
# 分支结构，时间复杂度取最大值
# 判断一个算法的效率时，往往只需要关注操作数量的最高次项，其它次要项和常数项可以忽略
# 在没有特殊说明时，我们所分析的算法的时间复杂度都是指最坏时间复杂度



a=1    # 1  -->  O(1)

b=1+2  # 2  -->  O(1)


# 1+2=3   -->  O(1)


for i in range(1001):
    for j in range(1001):
        pass

# 1001^2  --> N^2  -->  O(N^2)



# 3 +  N^2 --> O(N^2)


if 1>2:
    # 3
    a=1
    b=2
    c=3
else:
    # 1
    a=1

# 3 --> O(1)


# 3+N^2+3 --> O(N^2)



